# Dicionário para armazenar os clientes.
# A chave é o ID do cliente e o valor é um dicionário com os dados.
clientes = {}
proximo_id = 1

def adicionar_cliente():
    """Adiciona um novo cliente ao sistema."""
    global proximo_id
    print("\n--- Adicionar Novo Cliente ---")
    nome = input("Digite o nome do cliente: ")
    email = input("Digite o e-mail do cliente: ")
    telefone = input("Digite o telefone do cliente (opcional): ")
    
    # Cria o dicionário com os dados do cliente
    novo_cliente = {
        'nome': nome,
        'email': email,
        'telefone': telefone
    }
    
    # Adiciona o novo cliente ao dicionário principal
    clientes[proximo_id] = novo_cliente
    print(f"Cliente '{nome}' (ID: {proximo_id}) adicionado com sucesso!")
    proximo_id += 1

def listar_clientes():
    """Exibe todos os clientes cadastrados."""
    print("\n--- Lista de Clientes ---")
    if not clientes:
        print("Nenhum cliente cadastrado.")
        return
    
    for id, dados in clientes.items():
        print(f"ID: {id}")
        print(f"  Nome: {dados['nome']}")
        print(f"  E-mail: {dados['email']}")
        print(f"  Telefone: {dados['telefone']}")
        print("-" * 20)

def buscar_cliente_por_email():
    """Busca um cliente pelo endereço de e-mail."""
    print("\n--- Buscar Cliente por E-mail ---")
    email_busca = input("Digite o e-mail do cliente que você quer buscar: ")
    
    encontrado = False
    for id, dados in clientes.items():
        if dados['email'].lower() == email_busca.lower():
            print(f"\nCliente encontrado! (ID: {id})")
            print(f"  Nome: {dados['nome']}")
            print(f"  E-mail: {dados['email']}")
            print(f"  Telefone: {dados['telefone']}")
            encontrado = True
            break
            
    if not encontrado:
        print(f"Nenhum cliente com o e-mail '{email_busca}' foi encontrado.")

def remover_cliente():
    """Remove um cliente pelo ID."""
    print("\n--- Remover Cliente ---")
    listar_clientes()
    if not clientes:
        return

    try:
        id_remover = int(input("Digite o ID do cliente que você quer remover: "))
        if id_remover in clientes:
            nome_removido = clientes[id_remover]['nome']
            del clientes[id_remover]
            print(f"Cliente '{nome_removido}' (ID: {id_remover}) removido com sucesso!")
        else:
            print(f"ID {id_remover} não encontrado.")
    except ValueError:
        print("Entrada inválida. Por favor, digite um número.")

def menu_principal():
    """Exibe o menu de opções e controla o fluxo do programa."""
    while True:
        print("\n=== Sistema de Gestão de Clientes ===")
        print("1. Adicionar cliente")
        print("2. Listar todos os clientes")
        print("3. Buscar cliente por e-mail")
        print("4. Remover cliente")
        print("5. Sair")
        
        escolha = input("Escolha uma opção: ")
        
        if escolha == '1':
            adicionar_cliente()
        elif escolha == '2':
            listar_clientes()
        elif escolha == '3':
            buscar_cliente_por_email()
        elif escolha == '4':
            remover_cliente()
        elif escolha == '5':
            print("Saindo do sistema. Até mais!")
            break
        else:
            print("Opção inválida. Tente novamente.")

# Executa o menu principal quando o script é iniciado
if __name__ == "__main__":
    menu_principal()
